@function get-color-with-alpha($color, $alpha){
  $color-alpha: append($color,$alpha);
  $red: nth($color-alpha,1);
  $green: nth($color-alpha,2);
  $blue: nth($color-alpha,3);
  $alpha: nth($color-alpha,4);
  @return rgba($red, $green, $blue, $alpha);
}
///////////////////////////////////////////////////////////////
// @mixin
@mixin form-transparent-input($color) {
  background: transparent;
  border: none {
    bottom: 1px solid get-color-with-alpha($color, 0.5);
  };
  outline: none;
  width: 100%;

  &:hover,
  &:focus {
    border-bottom: 1px solid get-color-with-alpha($color, 1.0);
  }

  &:hover ~ label {
    color:get-color-with-alpha($color, 1.0);
  }
}
@mixin form-transparent-label($color) {
  color: get-color-with-alpha($color, 0.5);
  position: absolute;
  left: 7px;
  transition: .3s;
}
@mixin form-item-with-color($color-all, $color-label){
  position: relative;
  margin: 10px 20px;

  input {
    @include form-transparent-input($color-all);

    height: 40px;
    padding: 0px 15px;
    margin: 10px 10px;

    &:focus ~ label,
    &:not(:focus):valid ~ label {
      color: get-color-with-alpha($color-label, 0.88);
      left: 15px;
      top: -10px;
      font-size: 14px;
    }
  }

  label {
    @include form-transparent-label($color-all);
    top: 18px;
    margin: 5px 10px;
  }
}
@mixin form-search-item-with-color($color-all, $color-label){
  display: inline-block;
  position: relative;

  input {
    @include form-transparent-input($color-all);

    height: 30px;
    padding: 0px 10px;
    font-size: 14px;

    &:focus ~ label,
    &:not(:focus):valid ~ label {
      color: get-color-with-alpha($color-label, 0.88);
      left: 10px;
      top: -6px;
      font-size: 10px;
    }
  }

  label {
    @include form-transparent-label($color-all);
    top: 10px;
    pointer-events: none;
    line-height: 15px;
    font-size: 15px;
  }

  .btn {
    background-color: transparent;
    color: get-color-with-alpha($color-all, 0.5);
    /* border-color: #2780E3; */

    &:hover, &:focus {
      color:get-color-with-alpha($color-all, 1.0);
      /* border-color: #2780E3; */
    }
  }
}
@mixin rgba-linear-gradient($position, $color-from, $color-to){
  background: -webkit-linear-gradient($position, $color-from, $color-to 100%);
  background: -webkit-gradient(linear, $position, from($color-from, $color-to 100%));
  background: linear-gradient(to $position, $color-from, $color-to 100%);
}
///////////////////////////////////////////////////////////////
// for _authorization.scss
%form-transparent-background {
  background-color:  get-color-with-alpha($color-slightly-desaturated-blue, 0.2) !important;
  border: 1px solid  get-color-with-alpha($color-slightly-desaturated-blue, 0.3);
}
///////////////////////////////////////////////////////////////
// for _user.scss
%span-order {
  display:inline-block;
  vertical-align: top;
  padding: 1.0rem 0.2rem;
}
